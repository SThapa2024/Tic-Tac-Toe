<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #42C6C2;
        }

        .game-board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2rem;
            cursor: pointer;
            border: 1px solid #333;
            transition: background-color 0.3s;
        }

        .cell:hover {
            background-color: #EBEE42;
        }

        .status {
            margin-top: 20px;
            font-size: 1.5rem;
            text-align: center;
        }

        .button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <div class="game-container">
        <div class="game-board" id="board">
            <!-- Cells will be created by JavaScript -->
        </div>
        <div class="status" id="status">Player X's turn</div>
        <button class="button" onclick="resetGame()">Reset Game</button>
    </div>

    <script>
        let board;
        let currentPlayer = "X";
        let gameActive = true;

        const statusDisplay = document.getElementById("status");
        const boardElement = document.getElementById("board");

        // Initialize the board
        function initGame() {
            board = ["", "", "", "", "", "", "", "", ""];
            boardElement.innerHTML = "";
            gameActive = true;

            for (let i = 0; i < 9; i++) {
                const cell = document.createElement("div");
                cell.classList.add("cell");
                cell.setAttribute("data-index", i);
                cell.addEventListener("click", handleCellClick);
                boardElement.appendChild(cell);
            }

            statusDisplay.textContent = `Player ${currentPlayer}'s turn`;
        }

        // Handle cell click
        function handleCellClick(event) {
            const clickedCell = event.target;
            const clickedCellIndex = clickedCell.getAttribute("data-index");

            if (board[clickedCellIndex] !== "" || !gameActive) {
                return;
            }

            board[clickedCellIndex] = currentPlayer;
            clickedCell.textContent = currentPlayer;

            if (checkWinner()) {
                statusDisplay.textContent = `Player ${currentPlayer} wins!`;
                gameActive = false;
            } else if (board.every(cell => cell !== "")) {
                statusDisplay.textContent = "It's a draw!";
                gameActive = false;
            } else {
                currentPlayer = currentPlayer === "X" ? "O" : "X";
                statusDisplay.textContent = `Player ${currentPlayer}'s turn`;
            }
        }

        // Check if there's a winner
        function checkWinner() {
            const winningCombinations = [
                [0, 1, 2],
                [3, 4, 5],
                [6, 7, 8],
                [0, 3, 6],
                [1, 4, 7],
                [2, 5, 8],
                [0, 4, 8],
                [2, 4, 6]
            ];

            for (let i = 0; i < winningCombinations.length; i++) {
                const [a, b, c] = winningCombinations[i];
                if (board[a] && board[a] === board[b] && board[a] === board[c]) {
                    return true;
                }
            }

            return false;
        }

        // Reset the game
        function resetGame() {
            currentPlayer = "X";
            initGame();
        }

        // Initialize the game when the page loads
        window.onload = initGame;
    </script>

</body>
</html>
